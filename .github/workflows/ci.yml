name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Tests
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      run: npm ci
      working-directory: backend

    - name: Run backend tests
      run: npm test
      working-directory: backend
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/test
        JWT_SECRET: test-secret-key

    - name: Run backend linting
      run: npm run lint
      working-directory: backend

    - name: Run backend type check
      run: npm run type-check
      working-directory: backend

  # Frontend Tests
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend

    - name: Run frontend type check
      run: npm run type-check
      working-directory: frontend

    - name: Run frontend linting
      run: npm run lint
      working-directory: frontend

    - name: Build frontend
      run: npm run build
      working-directory: frontend

  # Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run npm audit for backend
      run: npm audit --audit-level=high
      working-directory: backend

    - name: Run npm audit for frontend
      run: npm audit --audit-level=high
      working-directory: frontend

  # Docker Build
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: modern-note-app-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: false
        tags: modern-note-app-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max